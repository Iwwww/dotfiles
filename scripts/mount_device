#!/bin/sh

# Simple device mount script
# Requirements:
# 1. udiskctl
# 2. lsblk
# 3. wc
# 4. dmenu
#   - password path https://tools.suckless.org/dmenu/patches/password/

# TODO:
# 1. power-off
# 2. lock
# 3. unlock
# 4. rewrite exit

. "${HOME}/.cache/wal/colors.sh"
DMEN="dmenu -nf $color15 -nb $color0 -sb $color5 -sf $color0"

# check command line argument
if [[ $1 = "" ]]; then
    devices=$(lsblk -r -o TYPE,NAME,SIZE,FSTYPE,LABEL,MOUNTPOINTS | grep -E "(part|disk)" | awk '{if($1=="disk"){print $2" "$3" "$4" "$5" "$6} else {print "└─" $2" "$3" "$4" "$5" "$6}}' | column -t)
    # lines_count=$(lsblk -r -o TYPE | wc -l)
    lines_count=30
    device_mount=$(echo "$devices" | $DMEN -l $lines_count -p Devices | awk '{print $1}' | sed "s/^└─//g")
else
    device_mount=$1
fi

label=$(lsblk -r -o NAME,LABEL | grep "$device_mount" | awk '{print $2}')
mountpoint=$(lsblk -r -o NAME,MOUNTPOINTS | grep "$device_mount" | awk '{print $2}')
path_to_device=$(lsblk -r -o NAME,PATH | grep "$device_mount\s" | awk '{print $2}')

folder="$device_mount"
# check if $label exists
# and set folder name
if [[ $label != "" ]]; then
    folder=$label
fi

# check if disk
if [[ $(lsblk -r -o TYPE,PATH | grep "$path_to_device$" | awk '{print $1}') = "disk" ]]; then
    # check if any partitions is mounted
    if [[ $(udisksctl power-off -b $path_to_device |& grep -c -E "Error") -eq 0 ]]; then
        notify-send "Power off" "Power off $path_to_device"
    else
        notify-send -u critical "Power off" "ERROR: $path_to_device"
    fi
else
    # check if partition is alrady mounted
    if [[ $mountpoint = "" ]]; then
        # request for sudo permission
        # need for non HOTPLUG devices
        if [[ $(lsblk -r -o PATH,HOTPLUG | grep $path_to_device | awk '{print $2}') != "1" ]]; then
            msg=$($DMEN -p "Password  $path_to_device:" -P | sudo --stdin -k udisksctl mount -b $path_to_device) 
            notify-send "Mount with SUDO" "$msg"
        else
            msg=$(udisksctl mount -b $path_to_device) 
            notify-send "Mount" "$msg"
        fi
    else
        # check exit
        if [[ $(echo $path_to_device | grep -c "^PATH .*") -eq 0 ]]; then
            # request for sudo permission
            # need for non HOTPLUG devices
            if [[ $(lsblk -r -o PATH,HOTPLUG | grep "$path_to_device " | awk '{print $2}') != "1" ]]; then
                msg=$($DMEN -p Password: -P | sudo --stdin -k udisksctl unmount -b $path_to_device) 
            else
                msg=$(udisksctl unmount -b $path_to_device) 
            fi
            notify-send "Unmount" "$label\n$path_to_device"
        fi
    fi
fi
